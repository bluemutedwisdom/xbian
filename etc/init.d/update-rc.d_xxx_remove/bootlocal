#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of Xbian - XBMC on the Raspberry Pi.
#
#Xbian is free software: you can redistribute it and/or modify it under the 
#terms of the GNU General Public License as published by the Free Software 
#Foundation, either version 3 of the License, or (at your option) any later 
#version.
#
#Xbian is distributed in the hope that it will be useful, but WITHOUT ANY 
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
#details.
#
#You should have received a copy of the GNU General Public License along 
#with Xbian. If not, see <http://www.gnu.org/licenses/>
#
### BEGIN INIT INFO
# Provides:          bootlocal
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: XBian boot scripts
# Description:
#
### END INIT INFO

NAME=bootlocal
DESC="XBian boot scripts"
VERBOSE=no
SCRIPTNAME=/etc/init.d/bootlocal

function resizesd() {
	if [ $(grep "/dev/mmcblk0p2[\ ]\{1,\}/" /etc/fstab | wc -l) -eq 1 ] && [ $(grep noresizesd /proc/cmdline | wc -l) -eq 0 ]; then
		# check if the partition needs resizing
		FDISKBLOCKSIZE=$(/sbin/sfdisk -d /dev/mmcblk0 | grep Id=83 | awk '{printf "%d", $6}');
		FDISKBLOCKCOUNT=$(/sbin/fdisk -l /dev/mmcblk0 | grep Units | sed -ne 's/\(.*= \)\([0-9]\{1,\}\)\( bytes\)/\2/p');
		TUNE2FS=$(/sbin/tune2fs -l /dev/mmcblk0p2);
		TUNEBLOCKSIZE=$(echo -e "${TUNE2FS}" | grep "Block size" | awk '{printf "%d", $3}');
		TUNEBLOCKCOUNT=$(echo -e "${TUNE2FS}" | grep "Block count" | awk '{printf "%d", $3}');
		TUNETOTALBLOCKS=$(($(($TUNEBLOCKCOUNT*$TUNEBLOCKSIZE))/1024/1024));
		FDISKTOTALBLOCKS=$(($(($FDISKBLOCKSIZE*$FDISKBLOCKCOUNT))/1024/1024));

		# resize root partition
		if [ $TUNETOTALBLOCKS -lt $FDISKTOTALBLOCKS ]; then
			/sbin/resize2fs /dev/mmcblk0p2
		fi
		
		FDISKBLOCKSIZE=$(/sbin/sfdisk -d /dev/mmcblk0 | grep Id=83 | awk '{printf "%d", $6}');
		FDISKBLOCKCOUNT=$(/sbin/fdisk -l /dev/mmcblk0 | grep Units | sed -ne 's/\(.*= \)\([0-9]\{1,\}\)\( bytes\)/\2/p');
		TUNE2FS=$(/sbin/tune2fs -l /dev/mmcblk0p2);
		TUNEBLOCKSIZE=$(echo -e "${TUNE2FS}" | grep "Block size" | awk '{printf "%d", $3}');
		TUNEBLOCKCOUNT=$(echo -e "${TUNE2FS}" | grep "Block count" | awk '{printf "%d", $3}');
		TUNETOTALBLOCKS=$(($(($TUNEBLOCKCOUNT*$TUNEBLOCKSIZE))/1024/1024));
		FDISKTOTALBLOCKS=$(($(($FDISKBLOCKSIZE*$FDISKBLOCKCOUNT))/1024/1024));
				
		if [ $TUNETOTALBLOCKS -eq $FDISKTOTALBLOCKS ]; then
			return 1;
		else
			return 0;
		fi
	fi
}

function createswap() {
	if [ ! -f /var/swapfile ] && [ $(grep noswapfile /proc/cmdline | wc -l) -eq 0 ]; then
		dd if=/dev/zero of=/var/swapfile bs=1024 count=128000
		/sbin/mkswap /var/swapfile &>/dev/null
		/sbin/swapon /var/swapfile &>/dev/null
	fi
	if [ -f /var/swapfile ] && [ $(grep /var/swapfile /etc/fstab | wc -l) -eq 0 ]; then
		echo -e '/var/swapfile\tswap\tswap\tdefaults\t0\t0' >> /etc/fstab
	fi
}

case "$1" in
  start)
		resizesd;
		if [ $? -eq 1 ]; then
			createswap;
		fi
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" ""
        /etc/rc.local
		echo 1 | sudo tee /proc/sys/vm/drop_caches >/dev/null
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        sync
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop}" >&2
        exit 3
        ;;
esac

:
